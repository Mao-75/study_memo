文字列の比較
->同じ値かどうか調べる時は == を使う
　異なる値かどうか調べるときは != を使う
 [例] 123 == 123   #=> true
    　　　123 == '123' #=> false
    　　　123 != '123' #=> true
   　　　 123 != 123   #=> false

->文字列を構成するバイト値の具体的な値をbytesメソッドで確認できる
[例] # bytesメソッドを使うと文字列のバイト値が配列で返る
    'a'.bytes   #=> [97]
    'b'.bytes   #=> [98]
    'c'.bytes   #=> [99]
    'abc'.bytes #=> [97, 98, 99]
    'あ'.bytes  #=> [227, 129, 130]


文字列の作成
[例1] 文字列リテラルの間に空白を挟むと１つの文字リテラルとみなされる
'abc' 'efg'          #=> "abcefg"


[例2] スペースがなくても可
'abc''efg'           #=> "abcefg"


[例3] ダブルクオートと \u をを組み合わせてUnicodeのコードポイントから文字列を作成
"\u3042\u3044\u3046" #=> "あいう"


[例4] コードポイントが４桁ではない場合は０埋めして４桁にするか、\u{}の形式を使う
# NG: ４桁ではないのでエラー
puts "\u41"    #=> invalid Unicode escape (SyntaxError)

# 0K: 0埋めして４桁にする
puts "\u0041"  #=> A

# 0K: \u{}の形式を使う
puts "\u{41}"  #=> A
